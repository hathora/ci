// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuildStatus string

const (
	BuildStatusCreated   BuildStatus = "created"
	BuildStatusRunning   BuildStatus = "running"
	BuildStatusSucceeded BuildStatus = "succeeded"
	BuildStatusFailed    BuildStatus = "failed"
)

func (e BuildStatus) ToPointer() *BuildStatus {
	return &e
}

func (e *BuildStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "running":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = BuildStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildStatus: %v", v)
	}
}

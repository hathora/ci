// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"cloudapi/pkg/utils"
	"errors"
)

type OrganizationInviteStatusType string

const (
	OrganizationInviteStatusTypeInviteStatusPending   OrganizationInviteStatusType = "InviteStatusPending"
	OrganizationInviteStatusTypeInviteStatusAccepted  OrganizationInviteStatusType = "InviteStatusAccepted"
	OrganizationInviteStatusTypeInviteStatusRejected  OrganizationInviteStatusType = "InviteStatusRejected"
	OrganizationInviteStatusTypeInviteStatusRescinded OrganizationInviteStatusType = "InviteStatusRescinded"
)

type OrganizationInviteStatus struct {
	InviteStatusPending   *InviteStatusPending
	InviteStatusAccepted  *InviteStatusAccepted
	InviteStatusRejected  *InviteStatusRejected
	InviteStatusRescinded *InviteStatusRescinded

	Type OrganizationInviteStatusType
}

func CreateOrganizationInviteStatusInviteStatusPending(inviteStatusPending InviteStatusPending) OrganizationInviteStatus {
	typ := OrganizationInviteStatusTypeInviteStatusPending

	return OrganizationInviteStatus{
		InviteStatusPending: &inviteStatusPending,
		Type:                typ,
	}
}

func CreateOrganizationInviteStatusInviteStatusAccepted(inviteStatusAccepted InviteStatusAccepted) OrganizationInviteStatus {
	typ := OrganizationInviteStatusTypeInviteStatusAccepted

	return OrganizationInviteStatus{
		InviteStatusAccepted: &inviteStatusAccepted,
		Type:                 typ,
	}
}

func CreateOrganizationInviteStatusInviteStatusRejected(inviteStatusRejected InviteStatusRejected) OrganizationInviteStatus {
	typ := OrganizationInviteStatusTypeInviteStatusRejected

	return OrganizationInviteStatus{
		InviteStatusRejected: &inviteStatusRejected,
		Type:                 typ,
	}
}

func CreateOrganizationInviteStatusInviteStatusRescinded(inviteStatusRescinded InviteStatusRescinded) OrganizationInviteStatus {
	typ := OrganizationInviteStatusTypeInviteStatusRescinded

	return OrganizationInviteStatus{
		InviteStatusRescinded: &inviteStatusRescinded,
		Type:                  typ,
	}
}

func (u *OrganizationInviteStatus) UnmarshalJSON(data []byte) error {

	inviteStatusPending := InviteStatusPending{}
	if err := utils.UnmarshalJSON(data, &inviteStatusPending, "", true, true); err == nil {
		u.InviteStatusPending = &inviteStatusPending
		u.Type = OrganizationInviteStatusTypeInviteStatusPending
		return nil
	}

	inviteStatusAccepted := InviteStatusAccepted{}
	if err := utils.UnmarshalJSON(data, &inviteStatusAccepted, "", true, true); err == nil {
		u.InviteStatusAccepted = &inviteStatusAccepted
		u.Type = OrganizationInviteStatusTypeInviteStatusAccepted
		return nil
	}

	inviteStatusRejected := InviteStatusRejected{}
	if err := utils.UnmarshalJSON(data, &inviteStatusRejected, "", true, true); err == nil {
		u.InviteStatusRejected = &inviteStatusRejected
		u.Type = OrganizationInviteStatusTypeInviteStatusRejected
		return nil
	}

	inviteStatusRescinded := InviteStatusRescinded{}
	if err := utils.UnmarshalJSON(data, &inviteStatusRescinded, "", true, true); err == nil {
		u.InviteStatusRescinded = &inviteStatusRescinded
		u.Type = OrganizationInviteStatusTypeInviteStatusRescinded
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u OrganizationInviteStatus) MarshalJSON() ([]byte, error) {
	if u.InviteStatusPending != nil {
		return utils.MarshalJSON(u.InviteStatusPending, "", true)
	}

	if u.InviteStatusAccepted != nil {
		return utils.MarshalJSON(u.InviteStatusAccepted, "", true)
	}

	if u.InviteStatusRejected != nil {
		return utils.MarshalJSON(u.InviteStatusRejected, "", true)
	}

	if u.InviteStatusRescinded != nil {
		return utils.MarshalJSON(u.InviteStatusRescinded, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"cloudapi/pkg/utils"
	"time"
)

type OrgPermission struct {
	UpdatedAt time.Time                `json:"updatedAt"`
	CreatedAt time.Time                `json:"createdAt"`
	Status    OrganizationInviteStatus `json:"status"`
	UserEmail string                   `json:"userEmail"`
	// System generated unique identifier for a user. Not guaranteed to have a specific format.
	InvitedBy string `json:"invitedBy"`
	// System generated unique identifier for an organization. Not guaranteed to have a specific format.
	OrgID string `json:"orgId"`
}

func (o OrgPermission) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrgPermission) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrgPermission) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *OrgPermission) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *OrgPermission) GetStatus() OrganizationInviteStatus {
	if o == nil {
		return OrganizationInviteStatus{}
	}
	return o.Status
}

func (o *OrgPermission) GetUserEmail() string {
	if o == nil {
		return ""
	}
	return o.UserEmail
}

func (o *OrgPermission) GetInvitedBy() string {
	if o == nil {
		return ""
	}
	return o.InvitedBy
}

func (o *OrgPermission) GetOrgID() string {
	if o == nil {
		return ""
	}
	return o.OrgID
}

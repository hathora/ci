// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"cloudapi/pkg/models/shared"
	"net/http"
)

type CreatePrivateLobbyGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *CreatePrivateLobbyGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type CreatePrivateLobbySecurity struct {
	PlayerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

func (o *CreatePrivateLobbySecurity) GetPlayerAuth() string {
	if o == nil {
		return ""
	}
	return o.PlayerAuth
}

type CreatePrivateLobbyRequestBody struct {
	// User input to initialize the game state. Object must be smaller than 64KB.
	InitialConfig shared.LobbyInitialConfig `json:"initialConfig"`
	Region        shared.Region             `json:"region"`
}

func (o *CreatePrivateLobbyRequestBody) GetInitialConfig() shared.LobbyInitialConfig {
	if o == nil {
		return shared.LobbyInitialConfig{}
	}
	return o.InitialConfig
}

func (o *CreatePrivateLobbyRequestBody) GetRegion() shared.Region {
	if o == nil {
		return shared.Region("")
	}
	return o.Region
}

type CreatePrivateLobbyRequest struct {
	RequestBody CreatePrivateLobbyRequestBody `request:"mediaType=application/json"`
	AppID       *string                       `pathParam:"style=simple,explode=false,name=appId"`
	RoomID      *string                       `queryParam:"style=form,explode=true,name=roomId"`
}

func (o *CreatePrivateLobbyRequest) GetRequestBody() CreatePrivateLobbyRequestBody {
	if o == nil {
		return CreatePrivateLobbyRequestBody{}
	}
	return o.RequestBody
}

func (o *CreatePrivateLobbyRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *CreatePrivateLobbyRequest) GetRoomID() *string {
	if o == nil {
		return nil
	}
	return o.RoomID
}

type CreatePrivateLobbyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	Lobby       *shared.Lobby
}

func (o *CreatePrivateLobbyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreatePrivateLobbyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreatePrivateLobbyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreatePrivateLobbyResponse) GetLobby() *shared.Lobby {
	if o == nil {
		return nil
	}
	return o.Lobby
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProcessStatus string

const (
	ProcessStatusStarting ProcessStatus = "starting"
	ProcessStatusRunning  ProcessStatus = "running"
	ProcessStatusDraining ProcessStatus = "draining"
	ProcessStatusStopping ProcessStatus = "stopping"
	ProcessStatusStopped  ProcessStatus = "stopped"
	ProcessStatusFailed   ProcessStatus = "failed"
)

func (e ProcessStatus) ToPointer() *ProcessStatus {
	return &e
}

func (e *ProcessStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "starting":
		fallthrough
	case "running":
		fallthrough
	case "draining":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		fallthrough
	case "failed":
		*e = ProcessStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProcessStatus: %v", v)
	}
}

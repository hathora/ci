// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/hathora/ci/internal/sdk/pkg/utils"
	"time"
)

// RoomAllocation - Metadata on an allocated instance of a room.
type RoomAllocation struct {
	UnscheduledAt *time.Time `json:"unscheduledAt"`
	ScheduledAt   time.Time  `json:"scheduledAt"`
	// System generated unique identifier to a runtime instance of your game server.
	ProcessID string `json:"processId"`
	// System generated unique identifier to an allocated instance of a room.
	RoomAllocationID string `json:"roomAllocationId"`
}

func (r RoomAllocation) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RoomAllocation) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *RoomAllocation) GetUnscheduledAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UnscheduledAt
}

func (o *RoomAllocation) GetScheduledAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ScheduledAt
}

func (o *RoomAllocation) GetProcessID() string {
	if o == nil {
		return ""
	}
	return o.ProcessID
}

func (o *RoomAllocation) GetRoomAllocationID() string {
	if o == nil {
		return ""
	}
	return o.RoomAllocationID
}

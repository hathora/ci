// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/hathora/ci/internal/sdk/pkg/models/shared"
	"net/http"
)

type GetRunningProcessesGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *GetRunningProcessesGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type GetRunningProcessesRequest struct {
	AppID  *string        `pathParam:"style=simple,explode=false,name=appId"`
	Region *shared.Region `queryParam:"style=form,explode=true,name=region"`
}

func (o *GetRunningProcessesRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

func (o *GetRunningProcessesRequest) GetRegion() *shared.Region {
	if o == nil {
		return nil
	}
	return o.Region
}

type GetRunningProcessesResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Ok
	ProcessWithRooms []shared.ProcessWithRooms
}

func (o *GetRunningProcessesResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetRunningProcessesResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetRunningProcessesResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetRunningProcessesResponse) GetProcessWithRooms() []shared.ProcessWithRooms {
	if o == nil {
		return nil
	}
	return o.ProcessWithRooms
}

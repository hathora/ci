// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"io"
	"net/http"
)

type DownloadLogForProcessGlobals struct {
	AppID *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *DownloadLogForProcessGlobals) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type DownloadLogForProcessRequest struct {
	ProcessID string  `pathParam:"style=simple,explode=false,name=processId"`
	AppID     *string `pathParam:"style=simple,explode=false,name=appId"`
}

func (o *DownloadLogForProcessRequest) GetProcessID() string {
	if o == nil {
		return ""
	}
	return o.ProcessID
}

func (o *DownloadLogForProcessRequest) GetAppID() *string {
	if o == nil {
		return nil
	}
	return o.AppID
}

type DownloadLogForProcessResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Ok
	// The Close method must be called on this field, even if it is not used, to prevent resource leaks.
	Stream io.ReadCloser
}

func (o *DownloadLogForProcessResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DownloadLogForProcessResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DownloadLogForProcessResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DownloadLogForProcessResponse) GetStream() io.ReadCloser {
	if o == nil {
		return nil
	}
	return o.Stream
}
